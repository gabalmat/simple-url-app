{"version":3,"sources":["components/Form.jsx","components/Table.jsx","App.js","index.js"],"names":["Form","props","handleChange","event","target","name","value","setState","submitForm","handleSubmit","state","initialState","url","comment","this","type","onChange","onClick","Component","TableHeader","CommentSection","result","comments","map","entry","index","key","TableBody","rows","apiData","row","uri","Table","App","backendURL","data","urlEntry","endpoint","body","hasOwnProperty","fetch","method","headers","JSON","stringify","then","json","status","alert","message","className","ReactDOM","render","document","getElementById"],"mappings":"qTAkDeA,E,YA/CX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAUVC,aAAe,SAACC,GAAW,IAAD,EACEA,EAAMC,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MAEd,EAAKC,SAAL,eACKF,EAAOC,KAfG,EAmBnBE,WAAa,WACT,EAAKP,MAAMQ,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAChBC,IAAK,GACLC,QAAS,IAGb,EAAKH,MAAQ,EAAKC,aARH,E,sEAwBT,IAAD,EACoBG,KAAKJ,MAAtBE,EADH,EACGA,IAAKC,EADR,EACQA,QAEb,OACI,8BACI,sCACA,2BACIE,KAAK,OACLV,KAAK,MACLC,MAAOM,EACPI,SAAUF,KAAKZ,eACnB,0CACA,2BACIa,KAAK,OACLV,KAAK,UACLC,MAAOO,EACPG,SAAUF,KAAKZ,eACnB,2BAAOa,KAAK,SAAST,MAAM,SAASW,QAASH,KAAKN,kB,GA1C/CU,aCAbC,EAAc,WAChB,OACI,+BACA,4BACI,mCACA,2CAMNC,EAAiB,SAACnB,GAAW,IAGzBoB,EAFepB,EAAbqB,SAEgBC,IAAI,SAACC,EAAOC,GAChC,OAAO,wBAAIC,IAAKD,GAAQD,EAAMX,WAGlC,OAAO,4BAAKQ,IAGVM,EAAY,SAAC1B,GACf,IAAM2B,EAAO3B,EAAM4B,QAAQN,IAAI,SAACO,EAAKL,GACjC,OACI,wBAAIC,IAAKD,GACL,4BAAKK,EAAIC,KACT,4BAAI,kBAAC,EAAD,CAAgBT,SAAUQ,EAAIR,eAK9C,OAAO,+BAAQM,IAgBJI,E,iLAZD,IACEH,EAAYf,KAAKb,MAAjB4B,QAER,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWA,QAASA,S,GAPhBX,aCuCLe,E,2MArEXC,WAAa,kE,EACbxB,MAAQ,CACJyB,KAAM,I,EAeV1B,aAAe,SAAA2B,GAEX,IAAMC,EAAW,EAAKH,WAAa,cAC7BI,EAAO,CACTP,IAAKK,EAASxB,KAGdwB,EAASG,eAAe,aACxBD,EAAI,QAAcF,EAASvB,SAG/B2B,MAAMH,EAAU,CACZI,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBJ,KAAMK,KAAKC,UAAUN,KAExBO,KAAK,SAAAxB,GAAM,OAAIA,EAAOyB,SACtBD,KAAK,SAAAxB,GACF,GAAIA,EAAOkB,eAAe,WAA+B,UAAlBlB,EAAO0B,OAC1CC,MAAM3B,EAAO4B,aAEZ,CACD,IAAMzB,EAAQ,CACVO,IAAKV,EAAOU,IACZT,SAAUD,EAAOC,UAGrB,EAAKf,SAAS,CAAC4B,KAAK,CAAEX,GAAH,mBAAa,EAAKd,MAAMyB,a,mFAxClC,IAAD,OACVvB,EAAME,KAAKoB,WAAa,aAC9BM,MAAM5B,GACLiC,KAAK,SAAAxB,GAAM,OAAIA,EAAOyB,SACtBD,KAAK,SAAAxB,GACF,EAAKd,SAAS,CACV4B,KAAMd,Q,+BAuCR,IACEc,EAASrB,KAAKJ,MAAdyB,KAER,OACI,yBAAKe,UAAU,aACX,8CACA,0DAEA,kBAAC,EAAD,CAAMzC,aAAcK,KAAKL,eAEzB,kBAAC,EAAD,CACIoB,QAASM,S,GA/DXjB,aCAlBiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ef6a6b0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            url: '',\n            comment: ''\n        };\n\n        this.state = this.initialState\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n\n        this.setState({\n            [name]: value\n        })\n    };\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    };\n\n    render() {\n        const { url, comment } = this.state\n\n        return (\n            <form>\n                <label>URL</label>\n                <input\n                    type=\"text\"\n                    name=\"url\"\n                    value={url}\n                    onChange={this.handleChange} />\n                <label>Comment</label>\n                <input\n                    type=\"text\"\n                    name=\"comment\"\n                    value={comment}\n                    onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, {Component} from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n        <tr>\n            <th>URL</th>\n            <th>Comments</th>\n        </tr>\n        </thead>\n    )\n};\n\nconst CommentSection = (props) => {\n    const { comments } = props\n\n    const result = comments.map((entry, index) => {\n        return <li key={index}>{entry.comment}</li>\n    })\n\n    return <ul>{result}</ul>\n}\n\nconst TableBody = (props) => {\n    const rows = props.apiData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.uri}</td>\n                <td><CommentSection comments={row.comments} /></td>\n            </tr>\n        )\n    });\n\n    return <tbody>{rows}</tbody>\n};\n\nclass Table extends Component {\n    render() {\n        const { apiData } = this.props\n\n        return (\n            <table>\n                <TableHeader />\n                <TableBody apiData={apiData} />\n            </table>\n        )\n    }\n}\n\nexport default Table;","import React, {Component} from 'react';\nimport './App.css';\nimport Form from './components/Form.jsx'\nimport Table from './components/Table.jsx'\n\nclass App extends Component {\n    backendURL = 'http://simpleapi-env.fug94qcwar.us-east-2.elasticbeanstalk.com/'\n    state = {\n        data: []\n    }\n\n    // GET request to API for all urls\n    componentDidMount() {\n        const url = this.backendURL + '/api/urls/'\n        fetch(url)\n        .then(result => result.json())\n        .then(result => {\n            this.setState({\n                data: result\n            })\n        })\n    }\n\n    handleSubmit = urlEntry => {\n        // POST the URL and Comment if one exists\n        const endpoint = this.backendURL + '/api/addurl'\n        const body = {\n            uri: urlEntry.url\n        }\n\n        if (urlEntry.hasOwnProperty('comment')) {\n            body['comment'] = urlEntry.comment\n        }\n\n        fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        .then(result => result.json())\n        .then(result => {\n            if (result.hasOwnProperty('status') && result.status === 'error') {\n                alert(result.message)\n            }\n            else {\n                const entry = {\n                    uri: result.uri,\n                    comments: result.comments\n                }\n\n                this.setState({data: [entry, ...this.state.data]});\n            }\n        })\n    }\n\n    render() {\n        const { data } = this.state;\n\n        return (\n            <div className=\"container\">\n                <h1>Simple URL App</h1>\n                <h4>Add a New URL and Comment:</h4>\n\n                <Form handleSubmit={this.handleSubmit} />\n\n                <Table\n                    apiData={data}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}